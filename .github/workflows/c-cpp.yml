name: C/C++ CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    container: python:latest
    steps:
    - uses: actions/checkout@v2
    - name: prepare
      run: pip install cpplint
    - name: lint
      run: make lint
  test:
    runs-on: ubuntu-latest
    container: vec7or/pwire-server-ci:test
    steps:
      - uses: actions/checkout@v2
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@2.1.1
      - name: test
        run: |
          make build_test
          make run_test
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: [lint, test]
    container: vec7or/pwire-server-ci:build
    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      uses: textbook/git-checkout-submodule-action@2.1.1
    - name: build
      run: |
        make build_lib_prod
        make build_prod
        cp exe/build/pwire-server .
    - name: Set version
      run: echo '::set-env name=SERVER_VERSION::'`cat version.txt`
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: $SERVER_VERSION
        release_name: Release $SERVER_VERSION
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./pwire-server
        asset_name: pwire-server
        asset_content_type: application/octet-stream
